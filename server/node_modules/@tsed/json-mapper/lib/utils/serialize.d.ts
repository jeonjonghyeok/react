import { MetadataTypes, Type } from "@tsed/json-mapper/lib/utils/node_modules/@tsed/core";
import "@tsed/json-mapper/lib/components";
import { JsonMapperMethods } from "@tsed/json-mapper/lib/interfaces/JsonMapperMethods";
export interface JsonSerializerOptions<T = any, C = any> extends MetadataTypes<T, C> {
    /**
     * Types used to map complex types (Symbol, Array, Set, Map)
     */
    types?: Map<Type<any>, JsonMapperMethods>;
    /**
     * useAlias mapping
     */
    useAlias?: boolean;
    [key: string]: any;
}
export declare function classToPlainObject(obj: any, options: JsonSerializerOptions<any, any>): {};
export declare function serialize(obj: any, { type, collectionType, ...options }?: JsonSerializerOptions): any;
