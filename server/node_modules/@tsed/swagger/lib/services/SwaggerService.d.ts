import { Configuration, ControllerProvider, InjectorService, Platform } from "@tsed/swagger/lib/services/node_modules/@tsed/common";
import { OpenSpec2, OpenSpec3 } from "@tsed/swagger/lib/services/node_modules/@tsed/openspec";
import { SpecSerializerOptions } from "@tsed/swagger/lib/services/node_modules/@tsed/schema";
import { SwaggerOS2Settings, SwaggerOS3Settings, SwaggerSettings } from "@tsed/swagger/lib/interfaces/SwaggerSettings";
export declare class SwaggerService {
    private injectorService;
    private platform;
    private configuration;
    constructor(injectorService: InjectorService, platform: Platform, configuration: Configuration);
    /**
     * Generate Spec for the given configuration
     * @returns {Spec}
     */
    getOpenAPISpec(conf: SwaggerOS3Settings): OpenSpec3;
    getOpenAPISpec(conf: SwaggerOS2Settings): OpenSpec2;
    getOpenAPISpec(conf: SwaggerSettings): OpenSpec2;
    /**
     * Return the global api information.
     */
    protected getDefaultSpec(conf: Partial<SwaggerSettings>): Partial<OpenSpec2 | OpenSpec3>;
    protected readSpecPath(path: string): any;
    /**
     *
     * @param ctrl
     * @param options
     */
    protected buildRoutes(ctrl: ControllerProvider, options: SpecSerializerOptions): Partial<OpenSpec2>;
}
